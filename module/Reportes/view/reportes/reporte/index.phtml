<link rel="stylesheet" href="/css/daterangepicker.css"/>
<link rel="stylesheet" href="/assets/color-picker/css/bootstrap-colorpicker.css"/>
<link rel="stylesheet" href="/css/dataTables.tableTools.css"/>

<script src="/js/parser-eval.js"></script>
<script type="text/javascript" src="/js/jquery.validate.min.js"></script>
<script src="/js/moment.js"></script>
<script src="/js/daterangepicker.js"></script>
<script src="/js/jquery.number.js"></script>
<script src="/assets/color-picker/js/bootstrap-colorpicker.js"></script>

<script src="/js/jquery.dataTables.js"></script>
<script src="/js/dataTables.fixedColumns.js"></script>
<script src="/js/dataTables.tableTools.js"></script>

<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script type="text/javascript" charset="utf-8">
  $(document).ready(function () {

    var TIPO_REGLA_SQL            = 1;
    var TIPO_FREGLA_RECURSIVA     = 2;
    var TIPO_REPETIR_CAMPO_FECHA  = 1;
    var TIPO_REPETIR_CAMPO_VECES  = 2;
    var CAMPO_ACTIVO              = 1;
    var TIPO_CAMPO_CATALOGO       = 1;
    var TIPO_CAMPO_REGLA          = 2;
    var TIPO_CAMPO_VALOR          = 3;
    var TIPO_CAMPO_DINAMICO       = 4;
    var TIPO_EXP_CAMPO            = 1;
    var TIPO_EXP_REGLA            = 2;
    var TIPO_EXP_NUMERO           = 3;
    var TIPO_EXP_OPERADOR         = 4;
    var TIPO_EXP_PUNTO            = 5;
    var TIPO_EXP_PARENT_IZQ       = 6;
    var TIPO_EXP_PARENT_DER       = 7;
    var TIPO_EXP_EMPLEADO         = 8;

    $("#reporte_form").validate({
      rules: {
        nombre: {
          required: true,
          minlength: 5,
          remote: {
            url: "/reporte/checkName",
            type: "POST",
            async: false,
            data: {
              id_reporte: function () {
                return $("#id_reporte").val();
              },
              id_plantilla: function () {
                return $("#id_plantilla").val();
              },
              nombre: function () {
                return $("#nombre").val();
              }
            }
          }
        },
        descripcion: {
          minlength: 5
        }
      },
      messages: {
        nombre: {
          required: "Ingrese un nombre para la reporte.",
          minlength: "El nombre de la reporte debe contener al menos 5 carácteres.",
          remote: "El nombre no se encuentra disponible."
        },
        descripcion: {
          minlength: "La descripción debe contener al menos 5 carácteres."
        }
      },
      invalidHandler: function (form, validator) {
        var errors = validator.numberOfInvalids();
        if (errors) {
          validator.errorList[0].element.focus();
        }
      }
    });

    $('#periodo').dateRangePicker({
      format: 'DD/MM/YYYY',
      separator: ' - ',
      setValue: function (dates) {
        $("#festivosDiv").show(500);
        this.value = dates;
      }
    });

    $('#periodo').on('input', function () {
      var val = $(this).val();
      if (val) {
        $("#festivosDiv").show(500);
      } else {
        $("#festivosDiv").hide(500);
      }
    });

    //Festivos
    var festivosElements = new Array();
    var index = 0;
//    var periodoDate = inputToDates(data.periodo);
    festivosElements[index++] = "festivo_0";
    $("#festivo_0").dateRangePicker({
      format: 'DD/MM/YYYY',
      separator: ' - ',
      singleDate: true
//      startDate: periodoDate.inicio,
//      endDate: periodoDate.fin
    });
    $(".icon_plus_alt").click(function (ev) {
      var id = "festivo_" + index;
      var html = $("#calendarLayout").html().replaceAll("?idFestivo", id);
      festivosElements[index++] = id;
      $("#festivosInpts").append(html);
      $("#" + id).dateRangePicker({
        format: 'DD/MM/YYYY',
        separator: ' - ',
        singleDate: true
//        startDate: periodoDate.inicio,
//        endDate: periodoDate.fin
      });
      $("#removeFestivo_" + id).click(function (ev) {
        $(this).parent().parent().remove();
        var removeId = $(this).attr("id");
        var position = parseInt(removeId.substring(22));
        festivosElements.splice(position, 1);
      });
    });

    $.executeFetch({
      action: "/plantilla/fetch",
      data: {id_plantilla: $("#id_plantilla").val()},
      method: "POST",
      dataType: "json",
      success: function (data) {
        $("#plantillaBC").html(data.nombre);
        $("#plantillaBC").attr("href", "/plantilla?id=" + data.id);
        $("#reportesBC").attr("href", "/reportes?id=" + data.id);
        if ($("#id_reporte").val() == "0") {
          $("#reporteBC").attr("href", "/reporte?id_plantilla=" + data.id);
        } else {
          $("#reporteBC").attr("href", "/reporte?id=" + $("#id_reporte").val() + "&id_plantilla=" + data.id);
        }
      },
      errorMsg: "Ocurrió un error al obtener la plantilla."
    });

    var fetch = function () {
      $.executeFetch({
        action: "/reporte/fetch",
        data: {id_reporte: $("#id_reporte").val()},
        method: "POST",
        dataType: "json",
        success: function (data) {
          $(".headerSectionTitle").html(data.nombre);
          $(".headerSectionId").html(data.id);
          $("#reporteBC").html(data.nombre);
          $("#reporteBC").attr("href", "/reportes?id=" + data.id);
          $("#nombre").val(data.nombre);
          $("#descripcion").val(data.descripcion);
          $("#periodo").val(data.periodo);
        },
        errorMsg: "Ocurrió un error al obtener la reporte."
      });
    }

    $("#addReporteBT").click(function (e) {
      $.executePostValid({
        form: $("#reporte_form"),
        action: "/reporte/update",
        method: "POST",
        dataType: "json",
        success: function (data) {
          $("#id_reporte").val(data.id);
          $(".headerSectionTitle").html(data.nombre);
          $(".headerSectionId").html(data.id);
          $("#reporteBC").html(data.nombre);
          $("#reporteBC").attr("href", "/reporte?id=" + data.id);
          //refreshTable
          refreshTable();
          $("#camposSection").show(500);
//                    $("#previewSection").show(500);
        },
        successMsg: "Reporte guardado.",
        errorMsg: "Ocurrió un error al guardar el reporte."
      });
    });

    /******************************************** CAMPOS ************************************************/

    var table;

    var refreshTable = function () {
      if (table) {
        table.destroy();
      }
      $.executeFetch({
        action: "/campo/fetchAll",
        method: "POST",
        dataType: "json",
        data: {id_plantilla: $("#id_plantilla").val()},
        success: function (data) {
          campos = data;
          var html = "";
          data.forEach(function (campo) {

            if (campo.id_repetir_campo) {
              if (campo.id_repetir_campo == TIPO_REPETIR_CAMPO_FECHA) {
                campo.tipo_campo = "Repetir Fecha - " + campo.tipo_campo;
              } else {
                campo.tipo_campo = "Repetir Veces - " + campo.tipo_campo;
              }
            }

            var campoChecked = "";
            if (campo.activo == CAMPO_ACTIVO) {
              campoChecked = "checked";
            }
            var up = "";
            if (parseInt(campo.orden) != 1) {
              up = "<i class='icon-sm arrow_up_alt upBT' id='up_" + campo.id + "' orden='" + campo.orden + "'></i> ";
            }
            var down = "";
            if (parseInt(campo.orden) < data.length) {
              down = "<i class='icon-sm arrow_down_alt downBT' id='down_" + campo.id + "' orden='" + campo.orden + "'></i> ";
            }

            var colorPicker = $("#colorPickerLayout").html().replaceAll("?colorId", "cp_" + campo.id).replace("?colorValue", campo.color);

            html += "<tr id='tr_" + campo.id + "'>"
            + "<td class='text-center'>" + up + campo.orden + down + "</td>"
            + "<td class='text-center'><input type='checkbox' class='camposCB' id='cb_" + campo.id + "' " + campoChecked + "/></td>"
            + "<td>" + colorPicker + "</td>"
            + "<td>" + campo.nombre + "</td>"
            + "<td>" + campo.tipo_campo + "</td>"
            + "<td>" + campo.prefijo + "</td>"
            + "<td>" + campo.sufijo + "</td>"
            + "<td>" + campo.valor + "</td>"
            + "</tr>\n";

          });
          //Main table
          $("#mainTableBody").html(html);
          table = $('#mainTable').DataTable({
            "columns": [
              {"width": "10%"},
              {"width": "5%"},
              {"width": "20%"},
              {"width": "25%"},
              {"width": "15%"},
              {"width": "10%"},
              {"width": "10%"},
              {"width": "5%"}
            ],
            "bSort": false,
            "language": {
              "url": "/app/lang/Spanish.json"
            },
            "bPaginate": false
          });
          $("#mainTable tbody tr").hover(function (e) {
            if ($(this).hasClass('row_selected')) {
              $(this).removeClass('row_selected');
            }
            else {
              table.$('tr.row_selected').removeClass('row_selected');
              $(this).addClass('row_selected');
            }
          });
          refreshTableActions();
        },
        errorMsg: "Ocurrió un error al obtener los campos."
      });
    }

    var refreshTableActions = function () {
      //Activar campos
      $(".camposCB").click(function (e) {
        var id = $(this).attr("id").substring(3);
        if ($(this).is(":checked")) {
          $.executeFetch({
            action: "/campo/updateActivo",
            data: {
              id_campo: id,
              activo: true
            },
            method: "POST",
            dataType: "json",
            success: function () {
            },
            successMsg: "Campo activado.",
            errorMsg: "Ocurrió un error al activar el campo."
          });
        } else {
          $.executeFetch({
            action: "/campo/updateActivo",
            data: {
              id_campo: id,
              activo: false
            },
            method: "POST",
            dataType: "json",
            success: function () {
            },
            successMsg: "Campo desactivado.",
            errorMsg: "Ocurrió un error al desactivar el campo."
          });
        }
      });
      //Color
      $('.colorPicker').colorpicker({
        component: "#colorPreview"
      });
      $('.saveColor').click(function (e) {
        var colorId = $(this).attr("color-id");
        var id = $("#" + colorId).attr("id").substring(3);
        var color = $("#" + colorId).val();
        $.executeFetch({
          action: "/campo/updateColor",
          data: {
            id_campo: id,
            color: color
          },
          method: "POST",
          dataType: "json",
          success: function () {},
          successMsg: "Color guardado.",
          errorMsg: "Ocurrió un error al desactivar el campo."
        });
      });
      //Ordenar campos hacia arriba
      $(".upBT").click(function (e) {
        var id = $(this).attr("id").substring(3);
        var orden = parseInt($(this).attr("orden"));
        $.executeFetch({
          action: "/campo/orden",
          data: {
            id: id,
            id_plantilla: $("#id_plantilla").val(),
            orden: orden,
            action: 'up'
          },
          method: "POST",
          dataType: "json",
          success: function () {
            refreshTable();
          },
          successMsg: "Campo ordenado.",
          errorMsg: "Ocurrió un error al ordenar el campo."
        });
      });
      //Ordenar campos hacia abajo
      $(".downBT").click(function (e) {
        var id = $(this).attr("id").substring(5);
        var orden = parseInt($(this).attr("orden"));
        $.executeFetch({
          action: "/campo/orden",
          data: {
            id: id,
            id_plantilla: $("#id_plantilla").val(),
            orden: orden,
            action: 'down'
          },
          method: "POST",
          dataType: "json",
          success: function () {
            refreshTable();
          },
          successMsg: "Campo ordenado.",
          errorMsg: "Ocurrió un error al ordenar el campo."
        });
      });
    }

    if (parseInt($("#id_reporte").val()) != 0) {
      fetch();
      refreshTable();
//      $("#camposSection").show(500);
    }

    /******************************************** REPORTE ************************************************/

    $("#generarReporteBT1").click(function (e) {
      refreshAllCamposSection();
      $("#reporteTitle").html($("#nombre").val());
      $("#previewSection").show(500);
    });

    $("#recalcularBT").click(function (e) {
      $("#contenidoReporteSection").hide(500);
      $("#reporteInfoSection").show(500);
      $("#camposSection").show(500);
    });

    var TOLERANCIA = 10;//10 mins de tolerancia

    var table2;
    var colsTmpl;
    var expressions;
    var allValores = new Array();
    var allCampos = new Array();
    var allReglas = new Array();
    var allEmpleados = new Array();
    var selectedCampo;
    var selectedEmpleado;

    $.executeFetch({
      action: "/regla/fetchAll",
      method: "POST",
      dataType: "json",
      data: {id_plantilla: $("#id_plantilla").val()},
      success: function (data) {
        data.forEach(function (regla) {
//                    if(regla.id != $("id_regla").val() && regla.id_tipo_regla == "1" && regla.id_salida && regla.id_salida == "1"){
          allReglas[regla.id] = regla;
//                    }
        });
      },
      errorMsg: "Ocurrió un error al obtener los campos."
    });

    var refreshAllCamposSection = function(){
      $.executeFetch({
        action: "/campo/fetchAll",
        method: "POST",
        dataType: "json",
        data: {id_plantilla: $("#id_plantilla").val()},
        success: function (campos) {
          var contenido = "";
          var rules = {};
          var ruleMsgs = {};
          //cols
          $("#paramsAllForm").html("");
          campos.forEach(function (campo) {

            console.log(campo);

            allCampos[campo.id] = campo;
            var regla = allReglas[campo.id_regla_negocio];
            var drawDOM= true;

            if (campo.activo == CAMPO_ACTIVO) {
              if (campo.id_tipo_campo == TIPO_CAMPO_DINAMICO) {
                contenido = "<input type='text' class='form-control allDynamic' id='allCampo_" + campo.id + "' name='allCampo_" + campo.id + "'/>";
              } else if (campo.id_tipo_campo == TIPO_CAMPO_CATALOGO) {
                var opts = campo.valor.split("|");
                var optsHtml = "";
                optsHtml += "<option value=''>Seleccione una opción</option>";
                for (var i = 0; i < opts.length; i++) {
                  optsHtml += "<option value='" + opts[i] + "'>" + opts[i] + "</option>";
                }
                contenido = "<select class='form-control allDynamic' id='allCampo_" + campo.id + "' name='allCampo_" + campo.id + "'>" + optsHtml + "</select>";
              } else if (campo.id_tipo_campo == TIPO_CAMPO_REGLA) {
                contenido = "<div class='input-group'>"
                + "<input type='text' class='form-control' id='allCampo_" + campo.id + "' name='allCampo_" + campo.id + "' readonly/>"
                + "<span class='input-group-addon'><i class='icon-sm glyphicon glyphicon-list reglaAll' id_campo='" + campo.id
                + "' id_regla='" + campo.id_regla_negocio + "' type='2'></i></span>"
                + "</div>";

                if(regla.id_tipo_regla == TIPO_REGLA_SQL && regla.operacion.indexOf("?") != -1){
                  contenido +=  "<div id='allCampo_" + campo.id + "_validate'></div>";
                  rules["allCampo_"+campo.id] = {required: true};
                  ruleMsgs["allCampo_"+campo.id] = {required: "Debe asignar un campo a esta regla."};
                }else{
                  drawDOM = false;
                }
              }

              if(drawDOM){
                var allCamposLayout = $("#allCamposLayout").html();
                allCamposLayout = allCamposLayout.replace("?campoLabel", campo.nombre);
                allCamposLayout = allCamposLayout.replace("?input", contenido);
                $("#paramsAllForm").append(allCamposLayout);
              }

            }
          });
          $("#paramsAllForm").append($("#generarLayout").html());

          $(".allDynamic").focus(function (e) {
            $.showMsg("warning", "Al ingresar un valor, el reporte se generará con todos los valores por default.");
          });

          /* Validate all campos */
          $("#paramsAllForm").validate({
            rules: rules,
            messages: ruleMsgs,
            errorPlacement: function (error, element) {
              var name = $(element).attr("name");
              error.appendTo($("#" + name + "_validate"));
            }
          });

          $(".generarReporteBT2").click(function (e) {
            if($("#paramsAllForm").valid()){
              refreshReporte();
            }
          });

          /* ALL REGLAS */
          $(".reglaAll").unbind();
          $(".reglaAll").click(function (e) {
            var type = $(this).attr("type");
            var id_campo = $(this).attr("id_campo");
            var id_regla = $(this).attr("id_regla");

            if(type == TIPO_CAMPO_REGLA){
              $("#allReglasSectionModal").html("");
              var regla = allReglas[id_regla];
              var sql = regla.operacion;
              if (sql.indexOf("?") != -1) {

                var params = splitSQLParams(sql);

                var reglaIndex = 0;
                //console.log("params");
                //console.log(params);
                params.forEach(function (param) {
                  var paramLayout = $("#expressionAllLayout").html();
                  paramLayout = paramLayout.replace("?campoLabel", regla.nombre + ": " + param);
                  paramLayout = paramLayout.replaceAll("?campoId", "regla_" + regla.id + "_param_" + param);

                  var htmlOpts = "";

                  //Empleado constants options
                  htmlOpts += "<option type='8' value='id'>Id Empleado Pronoi</option>\n";
                  htmlOpts += "<option type='8' value='id_rh'>Id Empleado RH</option>\n";
                  htmlOpts += "<option type='8' value='id_mitrol'>Id Empleado Mitrol</option>\n";
                  htmlOpts += "<option type='8' value='sueldo_diario'>Sueldo Diario</option>\n";
                  htmlOpts += "<option type='8' value='asistencias'>Asistencias en el período</option>\n";
                  htmlOpts += "<option type='8' value='faltas'>Faltas en el período</option>\n";
                  htmlOpts += "<option type='8' value='retardos'>Retardos en el período</option>\n";

                  //Campos options
                  campos.forEach(function (campo) {
                    htmlOpts += "<option type='1' value='" + campo.id + "' label='" + campo.nombre + "'>" + campo.nombre + "</option>\n";
                  });

                  paramLayout = paramLayout.replace("?options", htmlOpts);
                  $("#allReglasSectionModal").append(paramLayout);

                });

                $('#allParamsModal').modal('show');

                $("#guardarAllBT").unbind();
                $("#guardarAllBT").click(function (e) {
                  allValores[regla.id] = [];
                  params.forEach(function (param) {
                    var input = "#regla_" + regla.id + "_param_" + param;
                    //console.log("input");
                    //console.log(input);
                    allValores[regla.id][param] = {
                      type: $(input).children(":selected").attr("type"),
                      label: $(input).children(":selected").attr("label"),
                      val: $(input).val()
                    };
                    $('#allParamsModal').modal('hide');
                  });
                  $("#allCampo_"+id_campo).val("ASIGNADO");
                  //console.log("allValores");
                  //console.log(allValores);
                });

              }

            }else{
              //todo
            }

          });

        },
        errorMsg: "Ocurrió un error al obtener los campos."
      });
    };

    var refreshReporte = function () {
      colsTmpl = new Array();
      $.executeFetch({
        action: "/campo/fetchAll",
        method: "POST",
        dataType: "json",
        data: {id_plantilla: $("#id_plantilla").val()},
        success: function (campos) {

          var ths = "";
          var contenido = "";

          //static
          ths += "<th>Nombre</th>";
          ths += "<th>Id Empleado Pronoi</th>";
          ths += "<th>Id Empleado RH</th>";
          ths += "<th>Id Empleado Mitrol</th>";
          ths += "<th>Fecha Ingreso</th>";
          ths += "<th>Horario</th>";
          ths += "<th>Unidad de Negocio</th>";
          ths += "<th>Puesto</th>";
          ths += "<th>Campaña</th>";
          ths += "<th>Jefe Inmediato</th>";
          ths += "<th>Sueldo Diario</th>";

          //periodo
          var periodos = new Array();
          var periodoDate = inputToDates($("#periodo").val());

          while (periodoDate.inicio <= periodoDate.fin) {
            var label = periodoDate.inicio.toLocaleString().split(" ");
            var periodo = {
              id: label[0].replaceAll("/", "_"),
              label: label[0],
              value: new Date(periodoDate.inicio)
            };
            periodos.push(periodo);
            ths += "<th>" + periodo.label + "</td>";
            var newDate = periodoDate.inicio.setDate(periodoDate.inicio.getDate() + 1);
            periodoDate.inicio = new Date(newDate);
          }

          //cols
          var reglaOrden = 1;
          campos.forEach(function (campo) {
            allCampos[campo.id] = campo;
            if (campo.activo == CAMPO_ACTIVO) {
              if (campo.id_tipo_campo == TIPO_CAMPO_DINAMICO) {
                var valSetted = $("#allCampo_"+campo.id).val();
                ths += "<th>" + campo.nombre + "<div style='width: 90%; height: 25px; background-color: " + campo.color + ";'></div></th>";
                contenido = "<input type='text' class='form-control' id='campo_" + campo.id + "_empleado_?idEmpleado' value='"+valSetted+"'/>";
              } else if (campo.id_tipo_campo == TIPO_CAMPO_CATALOGO) {
                var valSetted = $("#allCampo_"+campo.id).val();
                ths += "<th>" + campo.nombre + "<div style='width: 90%; height: 25px; background-color: " + campo.color + ";'></div></th>";
                var opts = campo.valor.split("|");
                var optsHtml = "";
                for (var i = 0; i < opts.length; i++) {
                  var selected = opts[i] == valSetted ? "selected" : "";
                  optsHtml += "<option value='" + opts[i] + "' " + selected + ">" + opts[i] + "</option>";
                }
                contenido = "<select class='form-control' id='campo_" + campo.id + "_empleado_?idEmpleado'>" + optsHtml + "</select>";
              } else if (campo.id_tipo_campo == TIPO_CAMPO_REGLA) {
                ths += "<th style='width: 180px !important;'>" + campo.nombre + "<div style='width: 90%; height: 25px; background-color: " + campo.color + ";'></div></th>";
                contenido = "<div class='input-group' style='width: 200px;'>" +
                "<input type='text' class='form-control' id='campo_" + campo.id + "_empleado_?idEmpleado' readonly/>" +
                "<span class='input-group-addon'><i class='icon-sm icon_cog regla' id_campo='" + campo.id
                + "' id_empleado='?idEmpleado' id_regla='" + campo.id_regla_negocio + "' orden='"+(reglaOrden++)+"'></i></span></div>";
              } else {
                ths += "<th>" + campo.nombre + "<div style='width: 90%; height: 25px; background-color: " + campo.color + ";'></div></th>";
//                                contenido = campo.prefijo+campo.valor+campo.sufijo;
                contenido = "<input type='text' class='form-control' id='campo_" + campo.id + "_empleado_?idEmpleado' value='" + campo.valor + "' readonly/>";
              }
              colsTmpl.push(contenido);
            }
          });

          //Calcular todos los campos
          ths += "<th>Calcular Todo</th>";

          var tableWidth = (11 + periodos.length + colsTmpl.length) * 200;
          $("#previewTable").attr("width", tableWidth + "px");

          $.executeSyncFetch({
            action: "/empleado/fetchAllByIdTipoEmpleado",
            method: "POST",
            dataType: "json",
            data: {id_tipo_empleado: $("#id_tipo_empleado").val()},
            success: function (empleados) {
              var trs = "";
              var totalEmpleados = empleados.length;
//              empleados.forEach(function (empleado) {
              for(var i=0; i<2; i++){

                var empleado = empleados[i];
                //static
                trs += "<tr>";
                trs += "<td><i class='icon-sm glyphicon glyphicon-ok-sign icon-pending ok_"+empleado.id+"'></i>&nbsp;" + empleado.nombre + "</td>";
                trs += "<td>" + empleado.id + "</td>";
                trs += "<td>" + empleado.id_rh + "</td>";
                trs += "<td>" + empleado.id_mitrol + "</td>";
                trs += "<td>" + empleado.fecha_ingreso + "</td>";
                trs += "<td>" + empleado.horario + "</td>";
                trs += "<td>" + empleado.unidad_negocio + "</td>";
                trs += "<td>" + empleado.tipo_empleado + "</td>";
                trs += "<td>" + empleado.campana + "</td>";
                trs += "<td>" + empleado.jefe + "</td>";
                trs += "<td>$ " + $.number(empleado.sueldo_diario, 2) + "</td>";

                console.log("Empleado: " + empleado.id_mitrol);

                $.executeSyncFetch({
                  action: "/regla/empleadoAsistencia",
                  method: "POST",
                  dataType: "json",
                  data: {
                    id_empleado: empleado.id_mitrol,
                    inicio: periodoDate.periodoJSON.inicio.anio + "-" + periodoDate.periodoJSON.inicio.mes + "-" + periodoDate.periodoJSON.inicio.dia,
                    fin: periodoDate.periodoJSON.fin.anio + "-" + periodoDate.periodoJSON.fin.mes + "-" + periodoDate.periodoJSON.fin.dia
                  },
                  success: function (data) {
                    empleado.asistencias = new Array();
//                    empleado.retardos = new Array();
                    empleado.retardos = 0;
                    data.asistencias.forEach(function (asistencia) {
                      empleado.asistencias[asistencia[0]+"-"+asistencia[1]+"-"+asistencia[2]] = asistencia;
                      var entrada = empleado.horario.split("-")[0] + ":00";
                      entrada = entrada.split(":");
                      var entradaDate = new Date(asistencia[3]);
                      entradaDate.setHours(entrada[0]);
                      entradaDate.setMinutes(entrada[1]+TOLERANCIA);
                      entradaDate.setSeconds(entrada[2]);
                      var firstEventDate = new Date(asistencia[3]);
                      if(firstEventDate < entradaDate){
//                        empleado.retardos.push(asistencia[3]);
                        empleado.retardos++;
                      }
                    });
                  },
                  errorMsg: "Ocurrió un error al obtener la asistencia de " + empleado.nombre
                });

                //periodo
                var selectLayout;
                periodos.forEach(function (periodo) {

                  var dateIndex = periodo.value.getFullYear() + "-" + (periodo.value.getMonth()+1) + "-" + periodo.value.getDate();

                  if(empleado.asistencias[dateIndex]){
                    selectLayout = "<select class='form-control periodo' id='periodo_"+periodo.id + "_empleado_" + empleado.id + "' value='A'>";
                    selectLayout += "<option value='A'>Asistencia</option>";
                  }else{
                    selectLayout = "<select class='form-control periodo_" + empleado.id+"' id='periodo_"+periodo.id + "_empleado_" + empleado.id+"'>";
                    selectLayout += "<option value='F'>Falta</option>";
                    selectLayout += "<option value='D'>Descanso</option>";
                    selectLayout += "<option value='I'>Incapacidad</option>";
                    selectLayout += "<option value='V'>Vacaciones</option>";
                  }

                  selectLayout += "</select>";

                  trs += "<td>" + selectLayout + "</td>";
                });

                //cols
                colsTmpl.forEach(function (col) {
                  trs += "<td>" + col.replaceAll("?idEmpleado", empleado.id) + "</td>";
                });

                //Calcular todos los campos
                trs += "<td class='text-center'><i class='icon-md icon_cog calcTodo' id_empleado='" + empleado.id + "'></i></td>";

                trs += "</tr>";

                allEmpleados[empleado.id] = empleado;

//              });
              }

              if (campos.length > 0 && empleados.length > 0) {
                if (table2)
                  table2.destroy();

                //Preview table
                $("#previewTableHR").html(ths);
                $("#previewTableBody").html(trs);
                table2 = $('#previewTable').DataTable({
                  "scrollY": 400,
                  "scrollX": true,
                  "bPaginate": false,
                  "language": {
                    "url": "/app/lang/Spanish.json"
                  }
                });
                new $.fn.dataTable.FixedColumns( table2, {
                  leftColumns: 1
                } );
                $(".calcAllEmpConfirmBT").show();

                var calcsLeft = 0;
                //******** Click on calcular ALL EMPLEADOS ALL REGLAS ************
                $("#calcAllEmpBT").unbind();
                $("#calcAllEmpBT").click(function (e) {
                  $(".calcTodo").each(function() {
                    var id_empleado = $(this).attr("id_empleado");
                    calcAllReglas(id_empleado);
                  });
                });

                //******** Click on calcular ALL REGLAS ************
                $("#calcTodo").unbind();
                $(".calcTodo").click(function (e) {
                  var id_empleado = $(this).attr("id_empleado");
                  calcAllReglas(id_empleado);
                });

                var calcAllReglas = function(id_empleado){
                  var reglas = new Array();
                  calcsLeft = reglas.length;

                  $(".regla").each(function() {
                    var id_campo = $(this).attr("id_campo");
                    var id_regla = $(this).attr("id_regla");
                    var orden = $(this).attr("orden");
                    var id_empleado_regla = $(this).attr("id_empleado");
                    if(id_empleado == id_empleado_regla){
                      var regla = {
                        orden: orden,
                        id_campo: id_campo,
                        id_regla: id_regla,
                        id_empleado: id_empleado
                      }
                      reglas.push(regla);
                    }
                  });

                  reglas.sort(sortBy("orden"));

                  console.log(calcsLeft + "show!");
                  $.showSpinner();
                  var nextRegla = true;
                  setTimeout(function() {
                    reglas.forEach(function (regla) {
                      console.log(regla);
                      if(nextRegla){
                        nextRegla = calcularRegla(regla.id_campo, regla.id_regla, regla.id_empleado);
                      }
                    });
                    if(calcsLeft == 0){
//                      alert(calcsLeft + "hide!");
                      console.log(calcsLeft + "hide!");
                      $.hideSpinner();
                    }
                    if(nextRegla){
                      $(".ok_"+id_empleado).removeClass('icon-pending').addClass('icon-ready');
                      allEmpleados[id_empleado].ready = true;
                    }else{
                      $(".ok_"+id_empleado).removeClass('icon-ready').addClass('icon-pending');
                      allEmpleados[id_empleado].ready = false;
                    }
                    //Enable last button
                    var completed = true;
                    allEmpleados.forEach(function (empleado) {
                      if(!empleado.ready){
                        completed = false;
                      }
                    });
                    if(completed){
                      $(".generarReporteBT3").prop("disabled", false);
                    }else{
                      $(".generarReporteBT3").prop("disabled", true);
                    }
                  }, 1000);

                };

                //******** Click on calcular REGLA ************
                $(".regla").unbind();
                $(".regla").click(function (e) {
                  var id_campo = $(this).attr("id_campo");
                  var id_regla = $(this).attr("id_regla");
                  var id_empleado = $(this).attr("id_empleado");
                  calcularRegla(id_campo, id_regla, id_empleado);
                });

                var calcularRegla = function(id_campo, id_regla, id_empleado){

                  var nextRegla = true;
                  selectedCampo = id_campo;
                  selectedEmpleado = allEmpleados[id_empleado];

                  $.executeSyncFetch({
                    action: "/regla/fetch",
                    data: {id_regla: id_regla},
                    method: "POST",
                    dataType: "json",
                    success: function (data) {

                      if(data.id_tipo_regla == TIPO_REGLA_SQL){
                        expressions = new Array();
                        var sqlExpression = {
                          id_regla: data.id,
                          type: TIPO_EXP_REGLA,
                          label: data.nombre
                        }
                        expressions.push(sqlExpression);
                      }else{
                        expressions = JSON.parse(data.operacion);
                      }

                      var valid = true;
                      var missingValues = "";
                      var campoIndex = 0;

                      //Calcular asistencias para cada empleado
                      expressions.forEach(function (expression) {
                         if (expression.type == TIPO_EXP_EMPLEADO) {

                          var faltas = 0;
                          var asistencias = 0;
                          var descansos = 0;
//                          var retardos = 0;
                          $(".periodo_"+selectedEmpleado.id).each(function () {
                            var val = $(this).val();
                            switch (val){
                              case "A":{
                                asistencias++;
                                break;
                              }
                              case "D":{
                                descansos++;
                                break;
                              }
                              case "I":{
                                break;
                              }
                              case "V":{
                                break;
                              }
                              case "F": default:{
                                faltas++;
                                break;
                              }
                            }
                          });
                          selectedEmpleado.faltas = faltas;
                          selectedEmpleado.asistencias = asistencias;
                          selectedEmpleado.descansos = descansos;
//                          selectedEmpleado.retardos = retardos;
                        }
                      });

                      $("#reglasSectionModal").html("");

                      expressions.forEach(function (expression) {
                        if (expression.type == TIPO_EXP_CAMPO) {

                          var campo = allCampos[expression.id_campo];
                          expression.id = "campo_" + campoIndex;
                          expression.tipo_campo = campo.id_tipo_campo;
                          expression.value = $("#campo_" + expression.id_campo + "_empleado_" + selectedEmpleado.id).val();
                        } else if (expression.type == TIPO_EXP_REGLA) {

                          var regla = allReglas[expression.id_regla];
                          var sql = regla.operacion;

                          if (sql.indexOf("?") != -1) {
                            var params = splitSQLParams(sql);
                            for (var i = 0; i < params.length; i++) {
                              //console.log(allValores);
                              //console.log(regla.id + " " + params[i]);
                              var reglaVal = allValores[regla.id][params[i]];
                              if(reglaVal.type == TIPO_EXP_EMPLEADO){
                                sql = sql.replaceAll("?"+params[i], selectedEmpleado[reglaVal.val]);
                              }else{
                                var val = $("#campo_" + reglaVal.val + "_empleado_" + selectedEmpleado.id).val();
                                if(val && val != "undefined"){
                                  sql = sql.replaceAll("?"+params[i], val);
                                }else{
                                  valid = false;
                                  missingValues += "<br/>" + reglaVal.label;
                                }
                              }
                            }
                          }

                          if(valid){
                            //console.log(sql);
                            $.executeSyncFetch({
                              action: "/regla/sql",
                              data: {
                                db: regla.db,
                                sql: sql
                              },
                              method: "POST",
                              dataType: "json",
                              success: function (data) {
                                if (data.success) {
                                  if (data.cols.length == 1 && data.rows.length == 1) {
                                    expression.value = data.rows[0][0];
                                  } else if (data.cols.length == 1 && data.rows.length == 0) {
                                    $.showMsg("error", "El sql no ha regresado resultados.");
                                  } else {
                                    $.showMsg("error", "El sql debe regresar un solo resultado.");
                                  }
                                } else {
                                  $.showMsg("error", data.message);
                                }
                              },
                              errorMsg: "Ocurrió un error al obtener ejecutar el sql."
                            });
                          }

                        }
                      });

                      //Validar que los campos dinámicos de las expresiones contengan valores
                      //console.log(expressions);
                      expressions.forEach(function (expression) {
                        if (expression.type == TIPO_EXP_CAMPO && expression.tipo_campo &&
                            (expression.tipo_campo == TIPO_CAMPO_CATALOGO || expression.tipo_campo == TIPO_CAMPO_DINAMICO)) {

                          expression.value = $("#campo_" + expression.id_campo + "_empleado_" + selectedEmpleado.id).val();
                          if (!(expression.value && expression.value != "undefined")) {
                            valid = false;
                            missingValues += "<br/>" + expression.label;
                          }
                        }
                      });

                      if (valid) {
                        var operacion = "";
                        expressions.forEach(function (expression) {
//                            console.log(expression);
//                            console.log(selectedEmpleado);
                          if (expression.type == TIPO_EXP_CAMPO || expression.type == TIPO_EXP_REGLA) {
                            operacion += expression.value;
                          } else if (expression.type == TIPO_EXP_EMPLEADO) {
                            operacion += selectedEmpleado[expression.value];
                          } else {
                            operacion += expression.label;
                          }
                        });
                        try {
                          console.log("Operación: " + operacion);
                          result = Parser.evaluate(operacion);
                          $.showMsg("success", allCampos[selectedCampo].nombre + " - Resultado: " + result);
                          $("#campo_" + selectedCampo + "_empleado_" + selectedEmpleado.id).val(result);
                        } catch (ex) {
                          $.showMsg("error", "Error al evaluar la operación.<br/>" + ex);
                        }
                      } else {
                        nextRegla = false;
                        $.showMsg("error", "Por favor ingrese los siguientes valores en los campos:" + missingValues);
                      }

                    },
                    errorMsg: "Ocurrió un error al obtener la regla."
                  });
                  return nextRegla;
                };//Calcula Regla

              }
            },
            errorMsg: "Ocurrió un error al obtener los campos."
          });
        },
        errorMsg: "Ocurrió un error al obtener los campos."
      });
    };

    $("#calcularBT").click(function (e) {

      $.showSpinner();

      var operacion = "";
      var regla;
      var sql;
      var expValue;
      var missingValues = "";
      var calculate = true;

      expressions.forEach(function (expression) {

        if (expression.type == TIPO_EXP_CAMPO && expression.tipo_campo &&
            (expression.tipo_campo == TIPO_CAMPO_CATALOGO || expression.tipo_campo == TIPO_CAMPO_DINAMICO)) {
          expression.value = $("#campo_" + expression.id_campo + "_empleado_" + selectedEmpleado.id).val();
        }

//      console.log(expression);

        if (expression.type == TIPO_EXP_REGLA && expression.params) {

          regla = allReglas[expression.id_regla];
          sql = regla.operacion;

          for (var i = 0; i < expression.params.length; i++) {
//            sql = sql.replace("?", $("#" + expression.params[i]).val());
            sql = sql.replace("?"+expression.params[i].name, $("#"+expression.params[i].id).val());
          }

//          console.log(sql);

          $.executeSyncFetch({
            action: "/regla/sql",
            data: {
              db: regla.db,
              sql: sql
            },
            method: "POST",
            dataType: "json",
            dataType: "json",
            success: function (data) {
              if (data.success) {
                expValue = data.rows[0][0];
              } else {
                $.showMsg("error", data.message);
              }
            },
            errorMsg: "Ocurrió un error al ejecutar el sql."
          });

        } else {
          expValue = expression.value;
        }

        if (expValue) {
          operacion += expValue;
        } else {
          calculate = false;
          missingValues += "<br/>" + expression.label;
        }

      });

      $.hideSpinner();

      if (calculate) {
        console.log("Operación: " + operacion);
        try {
          result = Parser.evaluate(operacion);
          $('#paramsModal').modal('hide');
          $.showMsg("success", allCampos[selectedCampo].nombre + " - Resultado: " + result);
          $("#campo_" + selectedCampo + "_empleado_" + selectedEmpleado.id).val(result);
        } catch (ex) {
          $.showMsg("error", "Error al evaluar la operación.<br/>" + ex);
        }
      } else {
        $('#paramsModal').modal('hide');
        $.showMsg("error", "No se puede completar el cálculo de la regla, por favor ingrese los siguientes valores en los campos:" + missingValues);
      }

    });

    /******************************************** REPORTE PASO 3 ************************************************/

    $(".generarReporteBT3").click(function (e) {
      var data = table2.rows().data();
      var numCols = data[0].length-1;
      var reportContent = [];
      reportContent[0] = [];

      //Headers
      for(i=0; i<numCols; i++){
        reportContent[0][i] = table2.column(i).header().innerText;
      }

      //Cols
      for(i=0; i<data.length; i++){
        reportContent[i+1] = [];
        for(j=0; j<numCols; j++){
          var cell = data[i][j];
          var id;
          if(cell.startsWith("<select")){
            cell = $.parseHTML(cell);
            id = $(cell).attr("id");
            cell = $("#"+id+" option:selected").text();
          }else if(cell.startsWith("<input")){
            cell = $.parseHTML(cell);
            id = $(cell).attr("id");
            cell = $("#"+id).val();
          }else if(cell.startsWith("<div class=\"input-group\"")){
            cell = $.parseHTML(cell);
            cell = $(cell).children(":first");
            id = $(cell).attr("id");
            cell = $("#"+id).val();
          }else if(cell.startsWith("<i class=\"icon-sm")){
            cell = cell.split("&nbsp;")[1];
          }
          reportContent[i+1][j] = cell;
        }
      }

      $.executeFetch({
        action: "/reporte/saveReporte",
        data: {
          id_reporte: $("#id_reporte").val(),
          content: reportContent
        },
        method: "POST",
        dataType: "json",
        success: function (data) {
          drawContenidoReporte();
        },
        successMsg: "Contenido del reporte guardado.",
        errorMsg: "Ocurrió un error al guardar el contenido del reporte."
      });

    });

    var reporteCalculadoTable;
    var drawContenidoReporte = function(){
      $.executeFetch({
        action: "/reporte/fetchAllContent",
        data: {
          id_reporte: $("#id_reporte").val()
        },
        method: "POST",
        dataType: "json",
        success: function (data) {

          if(data.length > 0){
            var headers = "<tr>";
            for(j=0; j<data[0].length; j++){
              headers += "<th>" + data[0][j] + "</th>";
            }
            headers += "</tr>";

            var body = "";
            for(i=1; i<data.length; i++){
              body += "<tr>";
              for(j=0; j<data[i].length; j++){
                body += "<td>" + data[i][j] + "</td>";
              }
              body += "</tr>";
            }

            $("#reporteCalculadoTable").attr("width", data[0].length*200 + "px");
            $("#reporteCalculadoTableHeader").html(headers);
            $("#reporteCalculadoTableBody").html(body);

            if (reporteCalculadoTable)
              reporteCalculadoTable.destroy();

            reporteCalculadoTable = $('#reporteCalculadoTable').DataTable({
              "scrollY": 400,
              "scrollX": true,
              "bPaginate": false,
              "language": {
                "url": "/app/lang/Spanish.json"
              },
              dom: 'T<"clear">lfrtip',
              tableTools: {
                "sSwfPath": "../swf/copy_csv_xls_pdf.swf",
                "aButtons": [
                  {
                    "sExtends": "copy",
                    "sButtonText": "Copiar al escritorio"
                  },
                  {
                    "sExtends": "xls"
                  },
                  {
                    "sExtends": "pdf"
                  },
                  {
                    "sExtends": "print",
                    "sButtonText": "Imprimir"
                  }
                ]
              }
            });
            new $.fn.dataTable.FixedColumns( reporteCalculadoTable, {
              leftColumns: 1
            } );

            $("#reporteInfoSection").hide();
            $("#camposSection").hide();
            $("#previewSection").hide();
            $("#contenidoReporteSection").show();

          }else{
            $("#reporteInfoSection").show();
            $("#camposSection").show();
            $("#contenidoReporteSection").hide();
          }

        },
        errorMsg: "Ocurrió un error al obtener el contenido del reporte."
      });
    };

    drawContenidoReporte();

    var splitSQLParams = function(sql){
      var params = new Array();
      var sqlParts = sql.split("?");
      for(var i=1; i<sqlParts.length; i++){
        var param = "";
        for(var j=0; j<sqlParts[i].length; j++){
          var chhar = sqlParts[i].substring(j, j+1);
          if(chhar == " " || chhar == "\n"){
            params.push(param.replace(/(\r\n|\n|\r)/gm,""));
            break;
          }else{
            param += chhar;
          }
        }
      }
      return params;
    };

  });

  function inputToDates(inputVal){
    var fechas = inputVal.split(" - ");
    var inicio = fechas[0];
    var fin = fechas[1];
    inicio = inicio.split("/");
    fin = fin.split("/");

    var periodoJSON = {
      inicio: {
        dia: inicio[0],
        mes: inicio[1],
        anio: inicio[2]
      },
      fin: {
        dia: fin[0],
        mes: fin[1],
        anio: fin[2]
      }
    };

    inicio = new Date(periodoJSON.inicio.anio, parseInt(periodoJSON.inicio.mes) - 1, periodoJSON.inicio.dia);
    fin = new Date(periodoJSON.fin.anio, parseInt(periodoJSON.fin.mes) - 1, periodoJSON.fin.dia);

    var periodoDate = {
      periodoJSON : periodoJSON,
      inicio: inicio,
      fin: fin
    };

    return periodoDate;

  }

  function reverse(s) {
    return s.split("").reverse().join("");
  }

  function parseInteger(integer) {
    try {
      return parseInt(integer);
    } catch (e) {
      return false;
    }
  }

  function sortBy(property){
    var sortOrder = 1;
    if(property[0] === "-") {
      sortOrder = -1;
      property = property.substr(1);
    }
    return function (a,b) {
      var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;
      return result * sortOrder;
    }
  }

</script>

<div class="row">
  <div class="col-lg-12">

    <section class="panel no-display" id="reporteInfoSection">
      <header class="panel-heading">
        <span class="headerSectionTitle"></span>,
        ID: <span class="headerSectionId"></span>
      </header>
      <div class="panel-body">
        <div class="form">
          <form class="form-validate form-horizontal" id="reporte_form">
            <input type="hidden" id="id_reporte" name="id_reporte" value="<?php if ($id) {
              echo $id;
            } else {
              echo "0";
            } ?>"/>
            <input type="hidden" id="id_plantilla" name="id_plantilla" value="<?php echo $id_plantilla; ?>"/>
            <input type="hidden" id="id_tipo_empleado" name="id_tipo_empleado"
                   value="<?php echo $id_tipo_empleado; ?>"/>

            <div class="form-group">
              <label class="control-label col-lg-2">Nombre <span class="required">*</span></label>

              <div class="col-lg-5">
                <input class="form-control" id="nombre" name="nombre" minlength="5" type="text"/>
              </div>
            </div>
            <div class="form-group">
              <label class="control-label col-lg-2">Descripción</label>

              <div class="col-lg-5">
                <textarea class="form-control" id="descripcion" name="descripcion" rows="6"></textarea>
              </div>
            </div>
            <div class="form-group">
              <label class="control-label col-lg-2">Período</label>
              <div class="col-lg-3">
                <div class='input-group date'>
                  <input type='text' class="form-control" id="periodo" name="periodo"/>
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                </div>
              </div>
              <div class="col-lg-2">
                <button class="btn btn-primary" type="button" id="addFestivosBT">Agregar días festivos</button>
              </div>
            </div>
            <div class="form-group no-display" id="festivosDiv">
              <label class="control-label col-lg-2">Días Festivos:</label>

              <div class="col-lg-3">
                <div class='input-group date' id="festivosInpts">
                  <div class="input-group dynamic-inpt">
                    <input type='text' class="form-control" id="festivo_0"/>
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                        <span class="input-group-addon">
                                            <i class="icon-sm icon_plus_alt"></i>
                                        </span>
                  </div>
                </div>
              </div>
            </div>
            <div class="form-group">
              <div class="col-lg-offset-2 col-lg-10">
                <button class="btn btn-primary" type="button" id="addReporteBT">Guardar</button>
                <a class="btn btn-default" href="/reportes?id=<?php echo $id_plantilla; ?>">Regresar</a>
              </div>
            </div>
          </form>
        </div>
      </div>
    </section>

    <section class="panel no-display" id="camposSection">
      <header class="panel-heading">
        Campos Disponibles
        <a href="javascript:void(0)" id="generarReporteBT1" class="btn  btn-primary pull-right">
          <i class='icon-sm icon_cog'></i>Generar Reporte - Paso 1
        </a>
      </header>
      <div class="panel-body">
        <table id="mainTable" class="table table-bordered" cellspacing="0" width="100%">
          <thead>
          <tr>
            <th>Orden</th>
            <th>Activo</th>
            <th>Color</th>
            <th>Nombre</th>
            <th>Tipo</th>
            <th>Prefijo</th>
            <th>Sufijo</th>
            <th>Valor</th>
          </tr>
          </thead>
          <tbody id="mainTableBody"></tbody>
        </table>
      </div>
    </section>

    <section class="panel no-display" id="previewSection">
      <header class="panel-heading">
        <i class='icon-md icon_table'></i>
        <span id="reporteTitle"></span>
      </header>
      <div class="panel-body">
        <h5>Valores para todos los empleados:</h5>
        <form role="form" class="form-horizontal form-validate" id="paramsAllForm">
        </form>
      </div>
      <div class="panel-body">
        <table id="previewTable" class="table table-bordered" cellspacing="0">
          <thead id="previewTableHead">
          <tr id="previewTableHR"></tr>
          </thead>
          <tbody id="previewTableBody"></tbody>
        </table>
      </div>
      <div class="panel-body">
        <button class="btn btn-primary center-block generarReporteBT3" type="button" disabled>
          <i class='icon-md icon_cog'></i>&nbsp;Completar Reporte
        </button>
      </div>
    </section>

    <section class="panel no-display" id="contenidoReporteSection">
      <header class="panel-heading">
        <span class="headerSectionTitle"></span>,
        ID: <span class="headerSectionId"></span>
        <a href="javascript:void(0)" id="recalcularBT" class="btn  btn-primary pull-right">
          <i class='icon-sm icon_cog'></i>Recalcular Reporte
        </a>
      </header>
      <div class="panel-body">
        <table id="reporteCalculadoTable" class="table table-bordered" cellspacing="0" width="100%">
          <thead id="reporteCalculadoTableHeader"></thead>
          <tbody id="reporteCalculadoTableBody"></tbody>
        </table>
      </div>
    </section>

  </div>
</div>

<div id="expressionSelectLayout" class="hidden">
  <div class="form-group">
    <label class="control-label col-lg-4">?campoLabel</label>

    <div class="col-lg-8" id="selectLayout">
      <select class="form-control" id="?campoId">
        <option value="A">Asistencia</option>
        <option value="F">Falta</option>
        <option value="D">Descanso</option>
        <option value="I">Incapacidad</option>
        <option value="V">Vacaciones</option>
      </select>
    </div>
  </div>
</div>

<div id="colorPickerLayout" class="hidden">
  <div class="input-group colorPicker">
    <span id="colorPreview" class="input-group-addon"><i></i></span>
    <input type="text" id="?colorId" class="form-control" value="?colorValue"/>
    <span class="input-group-addon"><i class="icon-sm icon_check_alt saveColor" color-id="?colorId"></i></span>
  </div>
</div>

<div id="paramsContainerLayout" class="hidden">
  <div class="form-group">
    <div class="row">
      <div class="col-md-12">
        <label id="?paramsTittle"></label>
      </div>
    </div>
    <div class="row" id="?inputsContainer">

    </div>
  </div>
</div>

<div id="paramsTextLayout" class="hidden">
  <div class="col-md-2">
    <label id="?label"></label>
    <input class="form-control" id="?inputId">
  </div>
</div>

<div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="paramsModal" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button aria-hidden="true" data-dismiss="modal" class="close" type="button">x</button>
        <h4 class="modal-title">Parámetros</h4>
      </div>
      <div class="modal-body">
        <span>Ingrese los siguientes parámetros para continuar:</span>

        <div class="spacer-sm"></div>

        <div class="form">
          <form id="paramsForm" class="form-validate form-horizontal">

            <!--                        <span>Campos:</span>-->
            <!--                        <div id="camposSectionModal"></div>-->
            <!--                        <div class="spacer-sm"></div>-->

            <span>Parametros SQL:</span>

            <div id="reglasSectionModal"></div>
            <div class="spacer-md"></div>

            <div class="form-group">
              <div class="col-lg-offset-2 col-lg-10">
                <button class="btn btn-info" type="button" id="calcularBT">Calcular</button>
                <button class="btn btn-default" type="button" data-dismiss="modal">Cancelar</button>
              </div>
            </div>

          </form>
        </div>

      </div>

    </div>
  </div>
</div>

<div id="expressionEnabledLayout" class="hidden">
  <div class="form-group">
    <label class="control-label col-lg-4">?campoLabel</label>

    <div class="col-lg-4">
      <select class="form-control selectParams" id_campo="?campoId">?options</select>
    </div>
    <div class="col-lg-4">
      <input class="form-control" id="?campoId" name="?campoName" type="text" onlyNums/>
    </div>
  </div>
</div>

<div id="expressionDisabledLayout" class="hidden">
  <div class="form-group">
    <label class="control-label col-lg-4">?campoLabel</label>

    <div class="col-lg-8">
      <input class="form-control " id="?campoId" name="?campoName" type="text" value="?campoValue" readonly/>
    </div>
  </div>
</div>

<div id="expressionSelectLayout" class="hidden">
  <div class="form-group">
    <label class="control-label col-lg-4">?campoLabel</label>

    <div class="col-lg-8">
      <select class="form-control" id="?campoId" name="?campoName">?options</select>
    </div>
  </div>
</div>

<div id="calendarLayout" class="hidden">
  <div class="input-group dynamic-inpt">
    <input type='text' class="form-control" id="?idFestivo"/>
        <span class="input-group-addon">
            <span class="glyphicon glyphicon-calendar"></span>
        </span>
        <span class="input-group-addon">
            <i class="icon-sm icon_minus_alt" id="removeFestivo_?idFestivo"></i>
        </span>
  </div>
</div>

<div id="allCamposLayout" class="hidden">
  <div class="form-group">
    <label class="control-label col-lg-2">?campoLabel</label>
    <div class="col-lg-2">
      ?input
    </div>
  </div>
</div>

<div id="generarLayout" class="hidden">
  <div class="form-group">
    <label class="control-label col-lg-2">
      &nbsp;
    </label>
    <div class="col-lg-4">
      <button class="btn btn-primary generarReporteBT2" type="button">
        <i class='icon-md icon_cog'></i>&nbsp;Generar Reporte - Paso 2
      </button>
      <button class="btn btn-info no-display calcAllEmpConfirmBT" type="button" data-toggle="modal" data-target="#confirmModal">
        <i class='icon-md icon_cog'></i>&nbsp;Calcular todos los empleados
      </button>
    </div>
  </div>
</div>

<div aria-hidden="true" aria-labelledby="myModalLabel" role="dialog" tabindex="-1" id="allParamsModal" class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button aria-hidden="true" data-dismiss="modal" class="close" type="button">x</button>
        <h4 class="modal-title">Parámetros</h4>
      </div>
      <div class="modal-body">
        <span>Ingrese los siguientes parámetros para continuar:</span>

        <div class="spacer-sm"></div>

        <div class="form">
          <form id="allParamsForm" class="form-validate form-horizontal">
            <span>Parametros SQL:</span>
            <div id="allReglasSectionModal"></div>
            <div class="spacer-md"></div>
            <div class="form-group">
              <div class="col-lg-offset-2 col-lg-10">
                <button class="btn btn-info" type="button" id="guardarAllBT">Guardar</button>
                <button class="btn btn-default" type="button" data-dismiss="modal">Cancelar</button>
              </div>
            </div>

          </form>
        </div>

      </div>

    </div>
  </div>
</div>

<div id="expressionAllLayout" class="hidden">
  <div class="form-group">
    <label class="control-label col-lg-5">?campoLabel</label>
    <div class="col-lg-6">
      <select class="form-control selectParams" id="?campoId">?options</select>
    </div>
  </div>
</div>

<div aria-hidden="true" aria-labelledby="confirmModal" role="dialog" tabindex="-1" id="confirmModal" class="modal fade">
  <div class="modal-dialog modal-msg">
    <div class="modal-content">
      <div class="modal-header">
        <button aria-hidden="true" data-dismiss="modal" class="close" type="button">x</button>
        <h4 class="modal-title">Calcular todos los empleados</h4>
      </div>
      <div class="modal-body">
        <form class="form-horizontal" role="form">
          <input type="hidden" id="id_reporte" name="id_reporte"/>
          <div class="form-group modal-msg-label">
            <div class="col-lg-offset-1 col-lg-10">
              <span>¿Está seguro que desea calcular todos los campos para todos los empleados con los valores por default?</span>
              <div class="spacer-sm"></div>
              <div class="alertFont"><i class="icon_error-triangle"></i><span> Esto podría tomar varios minutos.</span></div>
              <div class="spacer-sm"></div>
            </div>
          </div>
          <div class="form-group">
            <div class="col-lg-offset-1 col-lg-12">
              <button type="button" id="calcAllEmpBT" class="btn btn-primary" data-dismiss="modal">Calcular</button>
              <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>